<?xml version="1.0" encoding="utf-8"?>
<CodeGeneration xmlns="http://schemas.beef.com/codegen/2015/01/entity" RefDataNamespace="Beef.Demo.Common.Entities" ValidatorLayer="Business" MapperDefaultRefDataConverter="ReferenceDataNullableGuidIdConverter" EventPublish="true">
  <Entity Name="Person" Text="Person" Implements="IETag, IChangeLog" Collection="true" CollectionResult="true" Validator="PersonValidator" WebApiRoutePrefix="api/v1/persons" Create="true" Delete="true" AutoImplement="Database" DatabaseSchema="Demo" EntityFrameworkEntity="EfModel.Person">
    <Property Name="Id" Text="{{Person}} identifier" Type="Guid" UniqueKey="true" DataAutoGenerated="true" DataName="PersonId" />
    <Property Name="FirstName" Type="string" />
    <Property Name="LastName" Type="string" />
    <Property Name="UniqueCode" Type="string" />
    <Property Name="Gender" Type="RefDataNamespace.Gender" RefDataType="string" DataName="GenderId" />
    <Property Name="Birthday" Type="DateTime" DateTimeTransform="DateOnly" />
    <Property Name="Address" Type="Address" IsEntity="true" DataDatabaseMapper="AddressData.DbMapper" DataEntityFrameworkIgnore="true" />
    <Property Name="ETag" ArgumentName="etag" Type="string" />
    <Property Name="ChangeLog" Type="ChangeLog" />

    <Operation Name="Get" OperationType="Get" UniqueKey="true" WebApiRoute="{id}" />
    <Operation Name="Update" OperationType="Update" Validator="PersonValidator" UniqueKey="true" WebApiRoute="{id}" DataSvcTransaction="true" />
    <Operation Name="Patch" OperationType="Patch" UniqueKey="true" WebApiRoute="{id}" />

    <Operation Name="GetAll" OperationType="GetColl" PagingArgs="true" WebApiRoute="all" />
    <Operation Name="GetAll2" OperationType="GetColl" PagingArgs="false" WebApiRoute="allnopaging" DatabaseStoredProc="spPersonGetAll"/>
    <Operation Name="GetByArgs" OperationType="GetColl" PagingArgs="true" WebApiRoute="" >
      <Parameter Name="Args" Type="PersonArgs" Validator="PersonArgsValidator" />
    </Operation>

    <Operation Name="GetDetailByArgs" OperationType="GetColl" ReturnType="PersonDetail" PagingArgs="true" WebApiRoute="argsdetail" AutoImplement="None">
      <Parameter Name="Args" Type="PersonArgs" Validator="PersonArgsValidator" />
    </Operation>

    <Operation Name="Merge" Text="Merge first {{Person}} into second" OperationType="Custom" ReturnType="Person" WebApiRoute="merge" WebApiOperationType="Update" WebApiAlternateStatus="ThrowException" EventPublish="true" EventSubject="Demo.Person.{fromId}:Merge" >
      <Parameter Name="FromId" Text="from {{Person}} identifier" Type="Guid" IsMandatory="true"  />
      <Parameter Name="ToId" Text="to {{Person}} identifier" Type="Guid" IsMandatory="true" ValidatorFluent="CompareValue(CompareOperator.NotEqual, fromId, nameof(fromId).ToSentenceCase())" />
    </Operation>
    
    <Operation Name="Mark" Text="Mark {{Person}}" OperationType="Custom" WebApiRoute="mark" WebApiStatus="Accepted" WebApiOperationType="Update" />

    <Operation Name="GetDetail" OperationType="Get" ReturnType="PersonDetail" UniqueKey="true" WebApiRoute="{id}/detail" AutoImplement="None" />
    <Operation Name="UpdateDetail" OperationType="Update" ValueType="PersonDetail" ReturnType="PersonDetail" Validator="PersonDetailValidator" UniqueKey="true" WebApiRoute="{id}/detail" AutoImplement="None" />
    <Operation Name="PatchDetail" OperationType="Patch" ReturnType="PersonDetail" UniqueKey="true" WebApiRoute="{id}/detail" PatchGetOperation="GetDetail" PatchUpdateOperation="PersonManager.UpdateDetail" />

    <!-- Entity Framework -->
    <Operation Name="GetByArgsWithEf" OperationType="GetColl" PagingArgs="true" WebApiRoute="args" AutoImplement="EntityFramework">
      <Parameter Name="Args" Type="PersonArgs" Validator="PersonArgsValidator" />
    </Operation>
    
    <Operation Name="GetWithEf" OperationType="Get" UniqueKey="true" WebApiRoute="ef/{id}" AutoImplement="EntityFramework" />
    <Operation Name="CreateWithEf" OperationType="Create" Validator="PersonValidator" WebApiRoute="ef" AutoImplement="EntityFramework" />
    <Operation Name="UpdateWithEf" OperationType="Update" Validator="PersonValidator" UniqueKey="true" WebApiRoute="ef/{id}" AutoImplement="EntityFramework" />
    <Operation Name="DeleteWithEf" OperationType="Delete" UniqueKey="true" WebApiRoute="ef/{id}" AutoImplement="EntityFramework" EventSubject="Demo.Person.{id}" />
  </Entity>

  <Entity Name="PersonArgs" Text="{{Person}} arguments" ExcludeAll="true" >
    <Property Name="FirstName" Type="string" />
    <Property Name="LastName" Type="string" />
    <Property Name="Genders" Type="Gender" RefDataType="string" RefDataList="true" />
  </Entity>

  <Entity Name="Address" ExcludeAll="true" ExcludeData="false" AutoImplement="Database" >
    <Property Name="Street" Type="string" />
    <Property Name="City" Type="string" />
  </Entity>

  <Entity Name="PersonDetail" Text="{{Person}} detail" Inherits="Person" Collection="true" CollectionResult="true" ExcludeAll="true">
    <Property Name="History" Type="WorkHistoryCollection" />
  </Entity>

  <Entity Name="WorkHistory" Collection="true" ExcludeAll="true" ExcludeData="false" AutoImplement="Database">
    <Property Name="PersonId" Text="{{Person}} identifier (not serialized/read-only for internal data merging)" Type="Guid" Immutable="true" IgnoreSerialization="true" />
    <Property Name="Name" Type="string" UniqueKey="true" />
    <Property Name="StartDate" Type="DateTime" DateTimeTransform="DateOnly" />
    <Property Name="EndDate" Type="DateTime" Nullable="true" DateTimeTransform="DateOnly" />
  </Entity>

  <!-- ODATA basic -->
  <Entity Name="Product" Text="Product" Collection="true" CollectionResult="true" WebApiRoutePrefix="api/v1/products" AutoImplement="OData" ODataName="TestOData" ODataEntity="Products">
    <Property Name="Id" Text="{{Product}} identifier" Type="int" Immutable="true" UniqueKey="true" DataName="ID" EmitDefaultValue="true" />
    <Property Name="Name" Type="string"/>
    <Property Name="Description" Type="string"/>

    <Operation Name="Get" OperationType="Get" UniqueKey="true" WebApiRoute="{id}" />
    <Operation Name="GetByArgs" OperationType="GetColl" PagingArgs="true" WebApiRoute="">
      <Parameter Name="Args" Type="ProductArgs" Validator="ProductArgsValidator" />
    </Operation>
  </Entity>

  <Entity Name="ProductArgs" Text="{{Product}} arguments" ExcludeAll="true">
    <Property Name="Name" Type="string"/>
    <Property Name="Description" Type="string"/>
  </Entity>

  <!-- ODATA D365 -->
  <Entity Name="CustomerGroup" Text="Customer group" Collection="true" CollectionResult="true" WebApiRoutePrefix="api/v1/customergroups" AutoImplement="OData" ODataName="DynamicsAx" ODataEntity="CustomerGroups">
    <Property Name="Id" Text="{{CustomerGroup}} identifier" Type="string" Immutable="true" UniqueKey="true" DataName="CustomerGroupId"/>
    <Property Name="Company" Type="RefDataNamespace.Company" RefDataType="string" Immutable="true" UniqueKey="true" DataName="dataAreaId" DataConverter="ExternalCodeConverter" IsDataConverterGeneric="true" />
    <Property Name="Description" Type="string"/>
    <Property Name="IsSalesTaxIncludedInPrice" Type="bool" DataConverter="BooleanToYesNoConverter"/>
    <Property Name="TaxGroup" Type="string" DataName="TaxGroupId"/>

    <Operation Name="Get" OperationType="Get" UniqueKey="true" WebApiRoute="{company}/{id}" />
    <Operation Name="GetByArgs" OperationType="GetColl" PagingArgs="true" WebApiRoute="" >
      <Parameter Name="Args" Type="CustomerGroupArgs" Validator="CustomerGroupArgsValidator"/>
    </Operation>
    <Operation Name="Create" OperationType="Create" Validator="CustomerGroupValidator" WebApiRoute="{company}" >
      <Parameter Name="Company" Property="Company" IsMandatory="true" LayerPassing="ToManagerSet"/>
    </Operation>
    <Operation Name="Update" OperationType="Update" UniqueKey="true" Validator="CustomerGroupValidator" WebApiRoute="{company}/{id}" />
    <Operation Name="UpdateBatch" Text="Upserts a {{CustomerGroupCollection}} as a batch" OperationType="Custom" WebApiRoute="{company}" AutoImplement="None" WebApiMethod="HttpPut">
      <Parameter Name="Value" Type="CustomerGroupCollection" IsMandatory="true" WebApiFrom="FromBody" ValidatorFluent="Collection(minCount: 1, maxCount:1, item: new Beef.Validation.Rules.CollectionRuleItem&lt;CustomerGroup&gt;(CustomerGroupValidator.Default))" />
      <Parameter Name="Company" Property="Company" IsMandatory="true" LayerPassing="ToManagerCollSet"/>
    </Operation>
    <Operation Name="Delete" OperationType="Delete" UniqueKey="true" WebApiRoute="{company}/{id}" />
  </Entity>

  <Entity Name="CustomerGroupArgs" Text="{{CustomerGroup}} arguments" ExcludeAll="true">
    <Property Name="Company" Type="RefDataNamespace.Company" RefDataType="string" />
    <Property Name="Description" Type="string" />
  </Entity>
 </CodeGeneration>