/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using Beef.Entities;
using Newtonsoft.Json;

namespace Beef.Demo.Business.Data.Model
{
    /// <summary>
    /// Represents the Robot entity.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class Robot : IGuidIdentifier, IETag, IChangeLog
    {
        /// <summary>
        /// Gets or sets the Id.
        /// </summary>
        [JsonProperty("id", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [Display(Name="Identifier")]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the Model No.
        /// </summary>
        [JsonProperty("modelNo", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [Display(Name="Model No")]
        public string? ModelNo { get; set; }

        /// <summary>
        /// Gets or sets the Serial No.
        /// </summary>
        [JsonProperty("serialNo", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [Display(Name="Serial No")]
        public string? SerialNo { get; set; }

        /// <summary>
        /// Gets or sets the Eye Color.
        /// </summary>
        [JsonProperty("eyeColor", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [Display(Name="Eye Color")]
        public string? EyeColor { get; set; }

        /// <summary>
        /// Gets or sets the Power Source.
        /// </summary>
        [JsonProperty("powerSource", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [Display(Name="Power Source")]
        public string? PowerSource { get; set; }

        /// <summary>
        /// Gets or sets the ETag.
        /// </summary>
        [JsonProperty("_etag", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [Display(Name="ETag")]
        public string? ETag { get; set; }

        /// <summary>
        /// Gets or sets the Change Log (see <see cref="ChangeLog"/>).
        /// </summary>
        [JsonProperty("changeLog", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [Display(Name="Change Log")]
        public ChangeLog? ChangeLog { get; set; }
    } 

    /// <summary>
    /// Represents a <see cref="Robot"/> collection.
    /// </summary>
    [SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1402:FileMayOnlyContainASingleClass", Justification = "Tightly coupled; OK.")]
    public partial class RobotCollection : List<Robot> { }
}

#nullable restore