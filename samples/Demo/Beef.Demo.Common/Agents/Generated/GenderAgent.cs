/*
 * This file is automatically generated; any changes will be lost. 
 */

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;
using Beef.Entities;
using Beef.WebApi;
using Beef.Demo.Common.Entities;
using Beef.Demo.Common.Agents.ServiceAgents;
using RefDataNamespace = Beef.Demo.Common.Entities;

namespace Beef.Demo.Common.Agents
{
    /// <summary>
    /// Provides the Gender Web API agent.
    /// </summary>
    public partial class GenderAgent : IGenderServiceAgent
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GenderAgent"/> class.
        /// </summary>
        /// <param name="httpClient">The <see cref="HttpClient"/> (where overridding the default value).</param>
        /// <param name="beforeRequest">The <see cref="Action{HttpRequestMessage}"/> to invoke before the <see cref="HttpRequestMessage">Http Request</see> is made (see <see cref="WebApiServiceAgentBase.BeforeRequest"/>).</param>
        public GenderAgent(HttpClient httpClient = null, Action<HttpRequestMessage> beforeRequest = null)
        {
            GenderServiceAgent = Beef.Factory.Create<IGenderServiceAgent>(httpClient, beforeRequest);
        }
        
        /// <summary>
        /// Gets the underlyng <see cref="IGenderServiceAgent"/> instance.
        /// </summary>
        public IGenderServiceAgent GenderServiceAgent { get; private set; }

        /// <summary>
        /// Gets the <see cref="Gender"/> object that matches the selection criteria.
        /// </summary>
        /// <param name="id">The <see cref="Gender"/> identifier.</param>
        /// <returns>A <see cref="WebApiAgentResult"/>.</returns>
        public Task<WebApiAgentResult<Gender>> GetAsync(Guid id)
        {
            return GenderServiceAgent.GetAsync(id);
        }

        /// <summary>
        /// Creates the <see cref="Gender"/> object.
        /// </summary>
        /// <param name="value">The <see cref="Gender"/> object.</param>
        /// <returns>A <see cref="WebApiAgentResult"/>.</returns>
        public Task<WebApiAgentResult<Gender>> CreateAsync(Gender value)
        {
            if (value == null)
                throw new ArgumentNullException("value");

            return GenderServiceAgent.CreateAsync(value);
        }

        /// <summary>
        /// Updates the <see cref="Gender"/> object.
        /// </summary>
        /// <param name="value">The <see cref="Gender"/> object.</param>
        /// <param name="id">The <see cref="Gender"/> identifier.</param>
        /// <returns>A <see cref="WebApiAgentResult"/>.</returns>
        public Task<WebApiAgentResult<Gender>> UpdateAsync(Gender value, Guid id)
        {
            if (value == null)
                throw new ArgumentNullException("value");

            return GenderServiceAgent.UpdateAsync(value, id);
        }
    }
}
